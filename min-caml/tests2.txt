()
let _ = 10 in ()
let _ = 10. in ()
let _ = -10 in ()
let _ = -10. in ()
let _ = 40 + 2 in ()
let _ = 40 - 2 in ()
let _ = -.10. in ()
let _ = 40. +. 2. in ()
let _ = 40. -. 2. in ()
let _ = 40. *. 2. in ()
let _ = 40. /. 2. in ()
let _ = true in ()
let _ = false in ()
const () 10
if true then () else ()
if true then const () 10 else ()
if true then () else const () 10
if 3 = 4 then () else ()
if 3 > 4 then () else ()
if 3 < 4 then () else ()
if 3 >= 4 then () else ()
if 3 <= 4 then () else ()
let x = () in x
let rec const x y = x in const () 10
let _ = (10, true, 2.) in ()
let (_, x, _) = (10, (), 2.) in x
x.(0)
x.(0) <- (); x.(0)
let rec ack x y = if x <= 0 then y + 1 else if y <= 0 then ack (x - 1) 1 else ack (x - 1) (ack x (y - 1)) in print_int (ack 3 10)
let rec make_adder x = let rec adder y = x + y in adder in print_int ((make_adder 3) 7)
let rec f x = x + 123 in let rec g y = f in print_int ((g 456) 789)
let rec f n = if n < 0 then () else (print_int n; let a = Array.make 1 f in a.(0) (n - 1)) in f 9
let x = 10 in let rec f y = if y = 0 then 0 else x + f (y - 1) in print_int (f 123)
let rec h p = let (v1,v2,v3,v4,v5,v6,v7,v8,v9,v10) = p in let rec g z = let r = v1 + v2 + v3 + v4 + v5 + v6 + v7 + v8 + v9 + v10 in if z > 0 then r else g (-z) in g 1 in print_int (h (1,2,3,4,5,6,7,8,9,10)); print_newline ()
let t = 123 in let f = 456 in let rec even x = let rec odd x = if x > 0 then even (x - 1) else if x < 0 then even (x + 1) else f in if x > 0 then odd (x - 1) else if x < 0 then odd (x + 1) else t in print_int (even 789)
let rec fib n = if n <= 1 then n else fib (n - 1) + fib (n - 2) in print_int (fib 30)
print_int (int_of_float ((sin (cos (sqrt (abs_float (-12.3)))) +. 4.5 -. 6.7 *. 8.9 /. 1.23456789) *. float_of_int 1000000))
let rec compose f g = let rec composed x = g (f x) in composed in let rec dbl x = x + x in let rec inc x = x + 1 in let rec dec x = x - 1 in let h = compose inc (compose dbl dec) in print_int (h 123)
let rec gcd m n = if m = 0 then n else if m <= n then gcd m (n - m) else gcd n (m - n) in print_int (gcd 21600 337500)
let rec inprod v1 v2 acc i = if i < 0 then acc else inprod v1 v2 (acc +. v1.(i) *. v2.(i)) (i - 1) in let v1 = Array.make 3 1.23 in let v2 = Array.make 3 4.56 in print_int (truncate (1000000. *. inprod v1 v2 0. 2))
let rec inprod v1 v2 i = if i < 0 then 0.0 else v1.(i) *. v2.(i) +. inprod v1 v2 (i - 1) in let v1 = Array.make 3 1.23 in let v2 = Array.make 3 4.56 in print_int (truncate (1000000. *. inprod v1 v2 2))
let rec getx v = (let (x, y, z) = v in x) in let rec gety v = (let (x, y, z) = v in y) in let rec getz v = (let (x, y, z) = v in z) in let rec inprod v1 v2 = getx v1 *. getx v2 +. gety v1 *. gety v2 +. getz v1 *. getz v2 in print_int (truncate (1000000. *. inprod (1., 2., 3.) (4., 5., 6.)))
let rec f _ = 123 in let rec g _ = 456 in let rec h _ = 789 in let x = f () in let y = g () in print_int ((if h () = 0 then x - y else y - x) + x + y)
let rec f _ = 123 in let rec g _ = 456 in let rec h _ = 789 in let x = f () in print_int ((if x <= 0 then g () + x else h () - x) + x)
let rec f _ = 123 in let rec g _ = 456 in let rec h _ = 789 in let x = f () in let y = g () in print_int ((if h () = 0 then x + 1 else y + 2) + x + y)
let rec f _ = 123 in let rec g _ = 456 in let x = f () in print_int ((if x <= 0 then g () + x else x) + x)
let rec f _ = 123 in let rec g _ = 456 in let rec h _ = 789 in let x = f () in print_int ((if x <= 0 then g () else h ()) + x)
let rec loop3 i k j a b c = if k < 0 then () else (c.(i).(j) <- c.(i).(j) +. a.(i).(k) *. b.(k).(j); loop3 i (k - 1) j a b c) in let rec loop2 i m j a b c = if j < 0 then () else (loop3 i (m - 1) j a b c; loop2 i m (j - 1) a b c) in let rec loop1 i m n a b c = if i < 0 then () else (loop2 i m (n - 1) a b c; loop1 (i - 1) m n a b c) in let rec mul l m n a b c = loop1 (l - 1) m n a b c in let dummy = Array.make 0 0. in let rec init i n mat = if i < 0 then () else (mat.(i) <- Array.make n 0.; init (i - 1) n mat) in let rec make m n dummy = let mat = Array.make m dummy in init (m - 1) n mat; mat in let a = make 2 3 dummy in let b = make 3 2 dummy in let c = make 2 2 dummy in a.(0).(0) <- 1.; a.(0).(1) <- 2.; a.(0).(2) <- 3.; a.(1).(0) <- 4.; a.(1).(1) <- 5.; a.(1).(2) <- 6.; b.(0).(0) <- 7.; b.(0).(1) <- 8.; b.(1).(0) <- 9.; b.(1).(1) <- 10.; b.(2).(0) <- 11.; b.(2).(1) <- 12.; mul 2 3 2 a b c; print_int (truncate (c.(0).(0))); print_newline (); print_int (truncate (c.(0).(1))); print_newline (); print_int (truncate (c.(1).(0))); print_newline (); print_int (truncate (c.(1).(1))); print_newline ()
let rec mul l m n a b c = let rec loop1 i = if i < 0 then () else let rec loop2 j = if j < 0 then () else let rec loop3 k = if k < 0 then () else (c.(i).(j) <- c.(i).(j) +. a.(i).(k) *. b.(k).(j); loop3 (k - 1)) in loop3 (m - 1); loop2 (j - 1) in loop2 (n - 1); loop1 (i - 1) in loop1 (l - 1) in let dummy = Array.make 0 0. in let rec make m n = let mat = Array.make m dummy in let rec init i = if i < 0 then () else (mat.(i) <- Array.make n 0.; init (i - 1)) in init (m - 1); mat in let a = make 2 3 in let b = make 3 2 in let c = make 2 2 in a.(0).(0) <- 1.; a.(0).(1) <- 2.; a.(0).(2) <- 3.; a.(1).(0) <- 4.; a.(1).(1) <- 5.; a.(1).(2) <- 6.; b.(0).(0) <- 7.; b.(0).(1) <- 8.; b.(1).(0) <- 9.; b.(1).(1) <- 10.; b.(2).(0) <- 11.; b.(2).(1) <- 12.; mul 2 3 2 a b c; print_int (truncate (c.(0).(0))); print_newline (); print_int (truncate (c.(0).(1))); print_newline (); print_int (truncate (c.(1).(0))); print_newline (); print_int (truncate (c.(1).(1))); print_newline ()
let x = truncate 1.23 in let y = truncate 4.56 in let z = truncate (-.7.89) in print_int ((if z < 0 then y else x) + (if x > 0 then z else y) + (if y < 0 then x else z))
let rec f _ = 12345 in let y = Array.make 10 3 in let x = 67890 in print_int (if y.(0) = 3 then f () + y.(1) + x else 7)
print_int 123; print_int (-456); print_int (789+0)
let rec foo a b c d e f = print_int a; print_int b; print_int c; print_int d; print_int e; print_int f in let rec bar a b c d e f = foo b a d e f c in bar 1 2 3 4 5 6
let rec f a b c d = let e = a + b in let f = a + c in let g = a + d in let h = b + c in let i = b + d in let j = c + d in let k = e + f in let l = e + g in let m = e + h in let n = e + i in let o = e + j in let p = f + g in let q = f + h in let r = f + i in let s = f + j in let t = g + h in let u = g + i in let v = g + j in let w = h + i in let x = h + j in let y = i + j in let aa = k + l in let ab = k + m in let ac = k + n in let ad = k + o in let ae = k + p in let af = k + q in let ag = k + r in let ah = k + s in let ai = k + t in let aj = k + u in let ak = k + v in let al = k + w in let am = k + x in let an = k + y in let z = a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + aa + ab + ac + ad + ae + af + ag + ah + ai + aj + ak + al + am + an in -z in print_int (f 1 2 3 4)
let rec f _ = 12345 in let rec g y = y + 1 in let z = Array.make 10 1 in let x = f () in let y = 67890 in let z0 = z.(0) in let z1 = z0 + z0 in let z2 = z1 + z1 in let z3 = z2 + z2 in let z4 = z3 + z3 in let z5 = z4 + z4 in let z6 = z5 + z5 in let z7 = z6 + z6 in let z8 = z7 + z7 in let z9 = z8 + z8 in let z10 = z9 + z9 in let z11 = z10 + z10 in let z12 = z11 + z11 in let z13 = z12 + z12 in let z14 = z13 + z13 in let z15 = z14 + z14 in print_int (if z.(1) = 0 then g y else z0 + z1 + z2 + z3 + z4 + z5 + z6 + z7 + z8 + z9 + z10 + z11 + z12 + z13 + z14 + z15 + x)
let rec f x0 = let x1 = x0 + 1 in let x2 = x1 + 1 in let x3 = x2 + 1 in let x4 = x3 + 1 in let x5 = x4 + 1 in let x6 = x5 + 1 in let x7 = x6 + 1 in let x8 = x7 + 1 in let x9 = x8 + 1 in let x10 = x9 + 1 in let x11 = x10 + 1 in let x12 = x11 + 1 in let x13 = x12 + 1 in let x14 = x13 + 1 in let x15 = x14 + 1 in let x16 = x15 + 1 in let x17 = x16 + 1 in let x18 = x17 + 1 in let x19 = x18 + x1 in let x20 = x19 + x2 in let x21 = x20 + x3 in let x22 = x21 + x4 in let x23 = x22 + x5 in let x24 = x23 + x6 in let x25 = x24 + x7 in let x26 = x25 + x8 in let x27 = x26 + x9 in let x28 = x27 + x10 in let x29 = x28 + x11 in let x30 = x29 + x12 in let x31 = x30 + x13 in let x32 = x31 + x14 in let x33 = x32 + x15 in let x34 = x33 + x16 in let x35 = x34 + x17 in let x36 = x35 + x0 in x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32 + x33 + x34 + x35 + x36 + x0 in print_int (f 0)
let rec sum acc x = if x <= 0 then acc else sum (acc + x) (x - 1) in print_int (sum 0 10000)
let rec sum x = if x <= 0 then 0 else sum (x - 1) + x in print_int (sum 10000)
let x = 42 in let rec f y1 y2 y3 y4 y5 = print_int (x + y1 + y2 + y3 + y4 + y5) in f 1 2 3 4 5
let x = 42 in let rec f y1 y2 y3 y4 y5 y6 = print_int x in f 1 2 3 4 5 6
