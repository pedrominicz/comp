#!/bin/sh

set -e

trap clean 0 1 2 3 6

clean() {
  rm -f Lex.hs Parse.hs a.out {,Eval/}*.{hi,o}
}

#time swipl -c generate_test.pl --stand_alone=true --goal=main -o a.out
#time ./a.out >test.txt
#exit

alias ghc='ghc -Wall -Wno-name-shadowing -O2 -rtsopts -with-rtsopts=-M4g -o a.out'

alex Lex.x
happy -acg Parse.y

#ghc -c Expr.hs
#ghc -ddump-to-file -ddump-simpl -dsuppress-all -dno-suppress-type-signatures -fforce-recomp -c Eval.hs
#exit

#ghc -prof -fprof-auto -rtsopts -with-rtsopts=-p Main.hs
#ghc Main.hs
#./a.out <./test/check.txt
#profiteur a.out.prof
#exit

#ghc -dynamic -main-is Bench.main Bench.hs
#./a.out --csv bench.csv --output bench.html
#exit

case "$1" in
  Main.hs)  runhaskell Main.hs;;
  *.hs)     ghci "$1";;
  *.pl)     swipl "$1";;
  *.x)      ghci Lex.hs;;
  *.y)      ghci Parse.hs;;
  *)        echo "cannot run '$1'";;
esac
